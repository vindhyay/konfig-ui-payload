{"version":3,"file":"rng-inputs.js","sources":["ng://@rng/inputs/lib/material.module.ts","ng://@rng/inputs/lib/bindable/bindable.component.ts","ng://@rng/inputs/lib/bindable-input/bindable-input.component.ts","ng://@rng/inputs/lib/bindable-select/bindable-select.component.ts","ng://@rng/inputs/lib/bindable-select-multi/bindable-select-multi.component.ts","ng://@rng/inputs/lib/bindable-checkbox/bindable-checkbox.component.ts","ng://@rng/inputs/lib/type-label/type-label.component.ts","ng://@rng/inputs/lib/reactive-control/reactive-control.component.ts","ng://@rng/inputs/lib/reactive-mat-input-control/reactive-mat-input-control.component.ts","ng://@rng/inputs/lib/reactive-mat-input/reactive-mat-input.component.ts","ng://@rng/inputs/lib/bindable-datepicker/bindable-datepicker.component.ts","ng://@rng/inputs/lib/simple-search/simple-search.component.ts","ng://@rng/inputs/lib/content-toolbar/content-toolbar.component.ts","ng://@rng/inputs/lib/bindable-textarea/bindable-textarea.component.ts","ng://@rng/inputs/lib/bindable-timepicker/bindable-timepicker.component.ts","ng://@rng/inputs/lib/bindable-multi-input/bindable-multi-input.component.ts","ng://@rng/inputs/lib/rng-inputs.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatAutocompleteModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, Input, Optional, Self, OnInit, OnDestroy } from '@angular/core';\nimport { formatCurrency, formatDate } from '@angular/common';\nimport { FormControl, NgControl, ControlValueAccessor, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { ErrorStateMatcher } from '@angular/material';\n\nconst DEFAULT_APPEARANCE = 'fill';\n\nexport const enum VALUE_TYPE {\n  CURRENCY = 'currency',\n  DATE = 'date',\n  DURATION = 'duration',\n  PASSWORD = 'password',\n  DEFAULT = 'default'\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class RngErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'rng-bindable',\n  template: 'NO BASE TEMPLATE',\n  styleUrls: []\n})\nexport class BindableComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  private localappearance: string | null;\n  private localReadonly: boolean;\n  private valType: string; // to format output\n\n\n  protected subscription = new Subscription();\n  private onLocalChange: (val: any) => void; // host's hook to track local changes\n  private onLocalTouch: () => void; // host's hook to track local touches\n\n  public valueControl = new FormControl();\n  public stateChanges = new Subject<void>(); // this will mostly be used with custom controls for material inputs\n\n  public matcher = new RngErrorStateMatcher();\n\n  @Input() label: string;\n  @Input() placeholder: string | null = '';\n  @Input() errorMessages: { [key: string]: string } | null = {\n    required: 'Field is required',\n    email: 'Email is invalid',\n    pattern: 'Incorrect value',\n    maxlength: 'Value is too long',\n    minlength: 'Value is too short',\n  };\n\n  @Input()\n    get appearance(): string {\n      return this.localappearance ? this.localappearance : DEFAULT_APPEARANCE;\n    }\n    set appearance(value: string) {\n      this.localappearance = value;\n    }\n\n  @Input()\n    get valueType(): string {\n      return this.valType;\n    }\n    set valueType(value: string) {\n      this.valueTypeSetter(value);\n    }\n\n  @Input()\n    get value(): any {\n      return this.valueGetter();\n    }\n    set value(value: any) {\n      this.valueSetter(value);\n    }\n\n  @Input()\n    get readonly(): boolean {\n      return this.localReadonly;\n    }\n    set readonly(value: boolean) {\n      this.localReadonly = value !== undefined && value !== false ? true : false;\n    }\n\n  @Input() disabledInput: boolean | null = false;\n\n  get floatLabel(): string {\n    return this.label && this.label.length ? 'auto' : 'never';\n  }\n\n  get fieldCSS(): string[] {\n    return this.fieldCSSGetter();\n  }\n\n  protected fieldCSSGetter() {\n    const css = ['full-width'];\n\n    if (this.readonly) {\n      css.push('readonly');\n    }\n\n    if (this.disabledInput) {\n      css.push('disabledInput');\n    }\n\n    return css;\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    // TODO: add common validators or some other logic to simplify or deserialise validators, etc.\n    if (this.ngControl && this.valueControl) {\n      this.valueControl.setValidators(this.ngControl.control.validator);\n      this.valueControl.setAsyncValidators(this.ngControl.control.asyncValidator);\n      this.valueControl.setValue(this.valueConverter(this.ngControl.value));\n      this.valueControl.updateValueAndValidity();\n      this.subscription.add(\n        this.valueControl.valueChanges.subscribe(this.onChange)\n      );\n    }\n  }\n\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  onChange = (val: any) => {\n    this.value = val;\n  }\n\n  onTouch = () => {\n    this.onLocalTouch();\n  }\n\n  protected valueGetter() {\n    return this.valueControl.value;\n  }\n\n  protected valueSetter(val: any) {\n    this.onLocalChange(val);\n    this.onLocalTouch();\n    this.stateChanges.next();\n  }\n\n  protected valueTypeSetter(value: string) {\n    this.valType = value;\n  }\n\n  protected valueConverter(val: any): any {\n    return val;\n  }\n\n  public auxDateFormatter(date: Date): string {\n    return formatDate(\n      date,\n      'dd MMM yyyy',\n      'en_US'\n    );\n  }\n\n  public auxCurrencyFormatter(amount: number): string {\n    return formatCurrency(\n      amount,\n      'en_US',\n      '$',\n      '1.2-2'\n    );\n  }\n\n  getErrorMessage() {\n    const errors: { [key: string]: { invalid: object, message?: string | null }} | null = this.valueControl.errors;\n    const keys = Object.keys(errors) as Array<any>;\n    return !errors ? null :\n      this.valueControl.hasError('required') ? this.errorMessages.required :\n      this.valueControl.hasError('email') ? this.errorMessages.email :\n      this.valueControl.hasError('maxlength') ? this.errorMessages.maxlength :\n      this.valueControl.hasError('minlength') ? this.errorMessages.minlength :\n      this.valueControl.hasError('pattern') ? this.errorMessages.pattern :\n      errors[keys[0]].message;\n  }\n  // control value accessor interface implementation:\n\n  public writeValue(val: any | null): void {\n    this.valueControl.setValue(this.valueConverter(val)); // initial value or model updates for the view\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onLocalChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onLocalTouch = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.valueControl.disable();\n    } else {\n      this.valueControl.enable();\n    }\n  }\n\n  // end of control value accessor interface implementation\n}\n","import { Component, Input, Optional, Self } from '@angular/core';\nimport { BindableComponent, VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-input',\n  templateUrl: './bindable-input.component.html',\n  styleUrls: []\n})\nexport class BindableInputComponent extends BindableComponent {\n  inputType: string | null = 'text';\n  inputPrefix: string | null = '';\n  inputMask: string | null = '';\n  inputDropSpecialCharacters: boolean | null = true;\n  passwordField: boolean | null = false;\n  datepickerField: boolean | null = false;\n\n  @Input()\n    get password(): boolean {\n      return this.inputType === 'password' ? true : false;\n    }\n    set password(value: boolean) {\n      this.inputType = value ? 'password' : 'text';\n    }\n  @Input()\n  get mask(): string {\n    return this.inputMask;\n  }\n  set mask(value: string) {\n    this.inputMask = value || '';\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  valueTypeSetter(value: VALUE_TYPE) {\n    // currency field\n    const currency: boolean = (value === VALUE_TYPE.CURRENCY);\n    this.inputPrefix = currency ? '$ ' : '';\n    this.inputMask = currency ? '0*.00' : '';\n    this.inputDropSpecialCharacters = !currency;\n\n    // password field\n    this.passwordField = (value === VALUE_TYPE.PASSWORD);\n    this.password = this.passwordField; // initial value\n\n    // datepicker field\n    this.datepickerField = (value === VALUE_TYPE.DATE);\n\n    super.valueTypeSetter(value);\n  }\n\n  valueGetter() {\n    const originalValue = super.valueGetter();\n\n    if (!originalValue) { return originalValue; } // return without modifications\n\n    switch (this.valueType) {\n      case VALUE_TYPE.DATE: {\n        return this.auxDateFormatter(originalValue);\n      }\n      case VALUE_TYPE.DURATION: {\n        const start = originalValue.start;\n        const end = originalValue.end;\n        return this.auxDateFormatter(start) + ' - ' + this.auxDateFormatter(end);\n      }\n      default: // no formatting required\n        return originalValue;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\n\n@Component({\n  selector: 'rng-bindable-select',\n  templateUrl: './bindable-select.component.html',\n  styleUrls: []\n})\nexport class BindableSelectComponent extends BindableComponent {\n\n  @Input() returnKey: string; // default returns selected object\n  @Input() valueKey: string | null = 'value'; // default search items by \"value\" key if they are objects\n  @Input() items: any[] | null = [];\n  @Input() disableOptionCentering: boolean | null = true;\n  @Input() nameKey: string | null = 'name';\n  @Input() disabled = false;\n\n  multiple = false;\n\n  get valueName(): string {\n    const currentValue = this.value;\n    return this.valueNameGetter(currentValue);\n  }\n\n  protected valueNameGetter(currentValue): string {\n    return currentValue ? currentValue.name ? currentValue.name : currentValue as unknown as string : this.placeholder;\n  }\n\n  protected fieldCSSGetter() {\n    const baseCSS = super.fieldCSSGetter();\n    baseCSS.push('single-select');\n    return baseCSS;\n  }\n\n  protected valueGetter() {\n    const oldValue = super.valueGetter();\n    return this.currentValue(oldValue); // gets one of current items (if still present) by valueKey\n  }\n\n  protected currentValue(oldValue) {\n    if (!oldValue) { return oldValue; } // value not yet set. can be undefined or null.\n                                        // we can't change it if it is null or undefined so just return it \"as is\".\n\n    const value = oldValue[this.valueKey];\n\n    if (!value) { return oldValue; } // values are strings, no search required\n\n    return this.items.find(item => item[this.valueKey] === value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BindableSelectComponent } from '../bindable-select/bindable-select.component';\n\n@Component({\n  selector: 'rng-bindable-select-multi',\n  templateUrl: '../bindable-select/bindable-select.component.html',\n  styleUrls: []\n})\nexport class BindableSelectMultiComponent extends BindableSelectComponent {\n\n  multiple = true;\n\n  get selectionCount(): number {\n    const value = this.value;\n    return value ? value.length : 0;\n  }\n\n  get valueName(): string {\n    const cnt = this.selectionCount;\n    switch (cnt) {\n      case 0:\n        return this.placeholder;\n      case 1:\n        return super.valueNameGetter(this.value[0]);\n      default:\n        return this.placeholder + ' (' + cnt + ')';\n    }\n  }\n\n  protected fieldCSSGetter() {\n    const baseCSS = super.fieldCSSGetter();\n    baseCSS.push('multi-select');\n    return baseCSS;\n  }\n\n  protected currentValue(oldValue: any[]) {\n    if (!oldValue) { return oldValue; } // value not yet set. can be undefined or null.\n                                        // we can't change it if it is null or undefined so just return it \"as is\".\n\n    const values = oldValue.reduce((vals, oldval) => { // re-checking items\n      const oldKeyValue = oldval[this.valueKey];\n      if (!oldKeyValue) {\n        vals.push(oldval); // values are string, so just return a value\n      } else {\n        const objVal = this.items.find(item => item[this.valueKey] === oldKeyValue);\n        if (objVal) {\n          vals.push(objVal);\n        }\n      }\n      return vals;\n    }, []);\n\n    return values;\n  }\n}\n","import { Component, Optional, Self } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-checkbox',\n  templateUrl: './bindable-checkbox.component.html',\n  styleUrls: []\n})\nexport class BindableCheckboxComponent extends BindableComponent {\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BageTypeLabel } from '../../model/common-types';\n\n@Component({\n  selector: 'rng-type-label',\n  templateUrl: './type-label.component.html',\n  styleUrls: [],\n})\nexport class TypeLabelComponent implements OnInit {\n  typeClass: string[];\n  typeData: BageTypeLabel;\n\n  @Input()\n    set data(data: BageTypeLabel) {\n      this.typeData = data;\n      this.typeClass = ['rng-type-label', this.data.color, 'badge'];\n    }\n    get data() {\n      return this.typeData;\n    }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, Input, Optional, Self, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormControl } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'rng-reactive-control',\n  template: 'NO BASE TEMPLATE',\n  styleUrls: []\n})\nexport class ReactiveControlComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private subscription: Subscription;\n  public valueControl = new FormControl();\n  public stateChanges = new Subject<void>(); // this will mostly be used with custom controls for material inputs\n\n  @Input()\n    get disabled(): boolean { return this.valueControl.disabled; }\n    set disabled(value: boolean) {\n      const disabled: boolean = coerceBooleanProperty(value);\n      if (disabled) {\n        this.valueControl.disable();\n      } else {\n        this.valueControl.enable();\n      }\n      this.stateChanges.next();\n    }\n\n  @Input()\n    get value(): any | null {\n      return this.valueControl.value;\n    }\n    set value(val: any | null) {\n      this.onChange(val);\n      this.stateChanges.next();\n    }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n      this.valueControl = new FormControl();\n    }\n  }\n\n  public onLocalChange = (val: any) => {\n    console.log('onLocalChange', val);\n    this.value = val;\n  }\n\n  onChange = (val: any) => {\n    console.log('onChange', val);\n  }\n\n  onTouched = () => {\n    console.log('onTouched');\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit');\n    // TODO: add common validators or some other logic to simplify or deserialise validators, etc.\n    if (this.ngControl && this.valueControl) {\n      console.log('ngOnInit: setting up');\n      // TODO: check for existing \"default\" validators\n      this.valueControl.setValidators(this.ngControl.validator);\n      this.valueControl.setAsyncValidators(this.ngControl.asyncValidator);\n      this.valueControl.setValue(this.ngControl.value);\n      this.valueControl.updateValueAndValidity();\n      this.subscription =\n        this.valueControl.valueChanges.subscribe(this.onLocalChange);\n    }\n  }\n\n  public ngOnDestroy() {\n    this.stateChanges.complete();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  public writeValue(val: string | null): void {\n    this.value = val; // initial value or model updates for the view\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","\n// this is just a pilot, not tested, WIP\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ElementRef, Input, OnDestroy, Optional, Self, HostBinding } from '@angular/core';\nimport { FormBuilder, FormGroup, ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { ReactiveControlComponent } from '../reactive-control/reactive-control.component';\n\n@Component({\n  selector: 'rng-reactive-mat-input-control',\n  templateUrl: 'reactive-mat-input-control.component.html',\n  styleUrls: ['reactive-mat-input-control.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: ReactiveMatInputControlComponent\n    }\n  ],\n})\nexport class ReactiveMatInputControlComponent extends ReactiveControlComponent\n  implements ControlValueAccessor, MatFormFieldControl<string>, OnDestroy {\n\n  static nextId = 0;\n\n  get empty() {\n    const { value } = this.parts;\n    return !value || value.length === 0;\n  }\n\n  @HostBinding('class.floating')\n    get shouldLabelFloat() {\n      return this.focused || !this.empty;\n    }\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  @HostBinding('id') id = `rng-rmff-input-${ReactiveMatInputControlComponent.nextId++}`;\n\n  @Input()\n    get placeholder(): string { return this._placeholder; }\n    set placeholder(value: string) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n\n  @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n      this._required = coerceBooleanProperty(value);\n      this.stateChanges.next();\n    }\n\n  constructor(\n    formBuilder: FormBuilder,\n    // tslint:disable-next-line: variable-name\n    private _focusMonitor: FocusMonitor,\n    // tslint:disable-next-line: variable-name\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl) {\n      super(ngControl);\n\n      this.parts = formBuilder.group({\n        value: '',\n      });\n\n      _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n        if (this.focused && !origin) {\n          this.onTouched();\n        }\n        this.focused = !!origin;\n        this.stateChanges.next();\n      });\n    }\n\n  parts: FormGroup;\n  focused = false;\n  errorState = false;\n  controlType = 'rng-rmff-input';\n\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  _handleInput(): void {\n    this.onChange(this.parts.value);\n  }\n}\n","import { Component, Optional, Self, Input } from '@angular/core';\nimport { ReactiveControlComponent } from '../reactive-control/reactive-control.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-reactive-mat-input',\n  templateUrl: './reactive-mat-input.component.html',\n  styleUrls: ['./reactive-mat-input.component.scss']\n})\nexport class ReactiveMatInputComponent extends ReactiveControlComponent {\n\n  @Input() label: string | null;\n  @Input() appearance: string | null;\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n}\n","import { Component, Optional, Self, Input } from '@angular/core';\nimport { BindableInputComponent } from '../bindable-input/bindable-input.component';\nimport { VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rng-bindable-datepicker',\n  templateUrl: './bindable-datepicker.component.html',\n  styleUrls: []\n})\nexport class BindableDatepickerComponent\n  extends BindableInputComponent {\n\n  @Input() touchUi: boolean | null = false;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private breakpointObserver: BreakpointObserver) {\n    super(ngControl);\n    this.valueType = VALUE_TYPE.DATE;\n  }\n\n  protected valueConverter(val: any): any {\n    return new Date(val) || val;\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'rng-simple-search',\n  templateUrl: './simple-search.component.html',\n  styleUrls: [],\n})\nexport class SimpleSearchComponent {\n  dataVal: string;\n  opened = false;\n  focused = false;\n\n  @Input() data: string | null = '';\n\n  @Input() closeButton: boolean | null = false;\n  @Input() placeholder = '';\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\n  @Output() searchClick: EventEmitter<any> = new EventEmitter();\n\n  openSearch = (e, el) => {\n    this.clickFunction();\n    this.opened = true;\n    this.focused = true;\n    el.focus();\n    return false;\n  }\n\n  changeFunction = (data: string) => {\n    this.dataVal = data;\n  }\n\n  backData = data => this.searchChange.emit(data);\n\n  onFocus() {\n    this.opened = true;\n    this.focused = true;\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onKeydownHandler(event: KeyboardEvent) {\n    if (event.key === 'Escape' || event.key === 'Enter') {\n      this.opened = false;\n      this.focused = false;\n      this.clickFunction();\n    }\n  }\n\n  cancelFunction() {\n    this.data = '';\n    this.opened = false;\n    this.focused = false;\n    this.backData(this.data);\n    this.clickFunction();\n  }\n\n  onBlur() {\n    if (this.data === '') {\n      this.opened = false;\n      this.focused = false;\n      this.clickFunction();\n    } else {\n      this.opened = true;\n    }\n  }\n\n  clickFunction = () => {\n    this.searchClick.emit();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterPresets } from '../../model/common-types';\n\n@Component({\n  selector: 'rng-content-toolbar',\n  templateUrl: './content-toolbar.component.html',\n  styleUrls: [],\n})\nexport class ContentToolbarComponent {\n  @Input() gridButton: boolean | null = false;\n  @Input() filterButton: boolean | null = false;\n  // new:\n  @Input() filters: FilterPresets[];\n  @Input() showFilters: boolean | null = false;\n  @Input() grid: boolean | null = true;\n  @Input() searchValue: string;\n\n  @Output() changeGrid = new EventEmitter();\n  @Output() searchData = new EventEmitter();\n  @Output() filterClick = new EventEmitter();\n  // new:\n  @Output() filterChanged = new EventEmitter();\n\n  // search function\n  onSearchChange(val) {\n    this.searchData.emit(val);\n  }\n  // end of search function\n\n  // filter\n  filterButtonClick() {\n    this.filterClick.emit();\n  }\n\n  changeFilter(state) {\n    this.filterChanged.emit(state);\n  }\n  // end of filter\n\n  // grid function\n  gridFunction() {\n    this.grid = !this.grid;\n    this.changeGrid.emit();\n  }\n  // end of grid function\n}\n","import { Component, EventEmitter, Output, Input, HostListener } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\nimport {  } from 'events';\n\n@Component({\n  selector: 'rng-bindable-textarea',\n  templateUrl: './bindable-textarea.component.html',\n  styleUrls: ['./bindable-textarea.component.scss']\n})\nexport class BindableTextareaComponent extends BindableComponent {\n  @Output() btnClick = new EventEmitter();\n  @Input() btnIconCSS: string | null;\n  @Input() autosize: boolean | null = true;\n  @Input() minRows: number | null = 1;\n  @Input() maxRows: number | null = 4;\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BindableInputComponent } from '../bindable-input/bindable-input.component';\nimport * as momentModule from 'moment';\nconst moment = momentModule;\n\n@Component({\n  selector: 'rng-bindable-timepicker',\n  templateUrl: './bindable-timepicker.component.html',\n  styleUrls: []\n})\nexport class BindableTimepickerComponent\n  extends BindableInputComponent\n  implements OnInit {\n  @Input() stepMinutes: number | null = 30;\n  @Input() dayStartHour: number | null = 8;\n  @Input() dayEndHour: number | null = 19;\n\n  items: string[] = [];\n  filteredItems: string[] = this.items;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.items = this.generateIntervals();\n    this.filteredItems = this.items;\n    this.subscription.add(\n      this.valueControl.valueChanges.subscribe(value => {\n        this.filteredItems = this.items.filter(item => item.startsWith(value));\n      })\n    );\n  }\n\n  generateIntervals(): string[] {\n    const items = [];\n    for (let index = this.dayStartHour * 60; index <= this.dayEndHour * 60; index += this.stepMinutes) {\n      const date = new Date(0, 0, 0, 0, index);\n      items.push(moment(date).format('h:mm A'));\n    }\n    return items;\n  }\n\n}\n","import { Component, Input, Optional, Self } from '@angular/core';\nimport { BindableComponent, VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-multi-input',\n  templateUrl: './bindable-multi-input.component.html',\n  styleUrls: []\n})\nexport class BindableMultiInputComponent extends BindableComponent {\n  inputType: string | null = 'text';\n  inputPrefix: string | null = '';\n  inputMask: string | null = '';\n  inputDropSpecialCharacters: boolean | null = true;\n  passwordField: boolean | null = false;\n  datepickerField: boolean | null = false;\n\n  @Input()\n    get password(): boolean {\n      return this.inputType === 'password' ? true : false;\n    }\n    set password(value: boolean) {\n      this.inputType = value ? 'password' : 'text';\n    }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  valueTypeSetter(value: VALUE_TYPE) {\n    // currency field\n    const currency: boolean = (value === VALUE_TYPE.CURRENCY);\n    this.inputPrefix = currency ? '$ ' : '';\n    this.inputMask = currency ? '0*.00' : '';\n    this.inputDropSpecialCharacters = !currency;\n\n    // password field\n    this.passwordField = (value === VALUE_TYPE.PASSWORD);\n    this.password = this.passwordField; // initial value\n\n    // datepicker field\n    this.datepickerField = (value === VALUE_TYPE.DATE);\n\n    super.valueTypeSetter(value);\n  }\n\n  valueGetter() {\n    const originalValue = super.valueGetter();\n\n    if (!originalValue) { return originalValue; } // return without modifications\n\n    switch (this.valueType) {\n      case VALUE_TYPE.DATE: {\n        return this.auxDateFormatter(originalValue);\n      }\n      case VALUE_TYPE.DURATION: {\n        const start = originalValue.start;\n        const end = originalValue.end;\n        return this.auxDateFormatter(start) + ' - ' + this.auxDateFormatter(end);\n      }\n      default: // no formatting required\n        return originalValue;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaterialModule } from './material.module';\n\nimport { BindableComponent } from './bindable/bindable.component';\nimport { BindableInputComponent } from './bindable-input/bindable-input.component';\nimport { BindableSelectComponent } from './bindable-select/bindable-select.component';\nimport { BindableSelectMultiComponent } from './bindable-select-multi/bindable-select-multi.component';\nimport { BindableCheckboxComponent } from './bindable-checkbox/bindable-checkbox.component';\nimport { TypeLabelComponent } from './type-label/type-label.component';\nimport { ReactiveControlComponent } from './reactive-control/reactive-control.component';\nimport { ReactiveMatInputControlComponent } from './reactive-mat-input-control/reactive-mat-input-control.component';\nimport { ReactiveMatInputComponent } from './reactive-mat-input/reactive-mat-input.component';\nimport { BindableDatepickerComponent } from './bindable-datepicker/bindable-datepicker.component';\nimport { SimpleSearchComponent } from './simple-search/simple-search.component';\nimport { ContentToolbarComponent } from './content-toolbar/content-toolbar.component';\nimport { BindableTextareaComponent } from './bindable-textarea/bindable-textarea.component';\nimport { BindableTimepickerComponent } from './bindable-timepicker/bindable-timepicker.component';\nimport { BindableMultiInputComponent } from './bindable-multi-input/bindable-multi-input.component';\n\n@NgModule({\n  declarations: [\n    BindableComponent,\n    BindableInputComponent,\n    BindableSelectComponent,\n    BindableSelectMultiComponent,\n    BindableCheckboxComponent,\n    TypeLabelComponent,\n    ReactiveControlComponent,\n    ReactiveMatInputControlComponent,\n    ReactiveMatInputComponent,\n    BindableDatepickerComponent,\n    SimpleSearchComponent,\n    ContentToolbarComponent,\n    BindableTextareaComponent,\n    BindableTimepickerComponent,\n    BindableMultiInputComponent\n  ],\n  imports: [\n    CommonModule,\n    NgxMaskModule.forRoot(),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    BindableComponent,\n    BindableInputComponent,\n    BindableSelectComponent,\n    BindableSelectMultiComponent,\n    BindableCheckboxComponent,\n    BindableDatepickerComponent,\n    ReactiveControlComponent,\n    ReactiveMatInputControlComponent,\n    ReactiveMatInputComponent,\n    SimpleSearchComponent,\n    ContentToolbarComponent,\n    BindableTextareaComponent,\n    BindableTimepickerComponent,\n    BindableMultiInputComponent\n  ]\n})\nexport class RngInputsModule { }\n"],"names":[],"mappings":"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"}
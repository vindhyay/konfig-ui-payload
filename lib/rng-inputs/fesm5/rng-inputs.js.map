{"version":3,"file":"rng-inputs.js","sources":["ng://@rng/inputs/lib/material.module.ts","ng://@rng/inputs/lib/bindable/bindable.component.ts","ng://@rng/inputs/lib/bindable-input/bindable-input.component.ts","ng://@rng/inputs/lib/bindable-select/bindable-select.component.ts","ng://@rng/inputs/lib/bindable-select-multi/bindable-select-multi.component.ts","ng://@rng/inputs/lib/bindable-checkbox/bindable-checkbox.component.ts","ng://@rng/inputs/lib/type-label/type-label.component.ts","ng://@rng/inputs/lib/reactive-control/reactive-control.component.ts","ng://@rng/inputs/lib/reactive-mat-input-control/reactive-mat-input-control.component.ts","ng://@rng/inputs/lib/reactive-mat-input/reactive-mat-input.component.ts","ng://@rng/inputs/lib/bindable-datepicker/bindable-datepicker.component.ts","ng://@rng/inputs/lib/simple-search/simple-search.component.ts","ng://@rng/inputs/lib/content-toolbar/content-toolbar.component.ts","ng://@rng/inputs/lib/bindable-textarea/bindable-textarea.component.ts","ng://@rng/inputs/lib/bindable-timepicker/bindable-timepicker.component.ts","ng://@rng/inputs/lib/bindable-multi-input/bindable-multi-input.component.ts","ng://@rng/inputs/lib/rng-inputs.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\n\n@NgModule({\n  exports: [\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatAutocompleteModule,\n  ]\n})\nexport class MaterialModule { }\n","import { Component, Input, Optional, Self, OnInit, OnDestroy } from '@angular/core';\nimport { formatCurrency, formatDate } from '@angular/common';\nimport { FormControl, NgControl, ControlValueAccessor, FormGroupDirective, NgForm } from '@angular/forms';\nimport { Subject, Subscription } from 'rxjs';\nimport { ErrorStateMatcher } from '@angular/material';\n\nconst DEFAULT_APPEARANCE = 'fill';\n\nexport const enum VALUE_TYPE {\n  CURRENCY = 'currency',\n  DATE = 'date',\n  DURATION = 'duration',\n  PASSWORD = 'password',\n  DEFAULT = 'default'\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class RngErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'rng-bindable',\n  template: 'NO BASE TEMPLATE',\n  styleUrls: []\n})\nexport class BindableComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n  private localappearance: string | null;\n  private localReadonly: boolean;\n  private valType: string; // to format output\n\n\n  protected subscription = new Subscription();\n  private onLocalChange: (val: any) => void; // host's hook to track local changes\n  private onLocalTouch: () => void; // host's hook to track local touches\n\n  public valueControl = new FormControl();\n  public stateChanges = new Subject<void>(); // this will mostly be used with custom controls for material inputs\n\n  public matcher = new RngErrorStateMatcher();\n\n  @Input() label: string;\n  @Input() placeholder: string | null = '';\n  @Input() errorMessages: { [key: string]: string } | null = {\n    required: 'Field is required',\n    email: 'Email is invalid',\n    pattern: 'Incorrect value',\n    maxlength: 'Value is too long',\n    minlength: 'Value is too short',\n  };\n\n  @Input()\n    get appearance(): string {\n      return this.localappearance ? this.localappearance : DEFAULT_APPEARANCE;\n    }\n    set appearance(value: string) {\n      this.localappearance = value;\n    }\n\n  @Input()\n    get valueType(): string {\n      return this.valType;\n    }\n    set valueType(value: string) {\n      this.valueTypeSetter(value);\n    }\n\n  @Input()\n    get value(): any {\n      return this.valueGetter();\n    }\n    set value(value: any) {\n      this.valueSetter(value);\n    }\n\n  @Input()\n    get readonly(): boolean {\n      return this.localReadonly;\n    }\n    set readonly(value: boolean) {\n      this.localReadonly = value !== undefined && value !== false ? true : false;\n    }\n\n  @Input() disabledInput: boolean | null = false;\n\n  get floatLabel(): string {\n    return this.label && this.label.length ? 'auto' : 'never';\n  }\n\n  get fieldCSS(): string[] {\n    return this.fieldCSSGetter();\n  }\n\n  protected fieldCSSGetter() {\n    const css = ['full-width'];\n\n    if (this.readonly) {\n      css.push('readonly');\n    }\n\n    if (this.disabledInput) {\n      css.push('disabledInput');\n    }\n\n    return css;\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    // TODO: add common validators or some other logic to simplify or deserialise validators, etc.\n    if (this.ngControl && this.valueControl) {\n      this.valueControl.setValidators(this.ngControl.control.validator);\n      this.valueControl.setAsyncValidators(this.ngControl.control.asyncValidator);\n      this.valueControl.setValue(this.valueConverter(this.ngControl.value));\n      this.valueControl.updateValueAndValidity();\n      this.subscription.add(\n        this.valueControl.valueChanges.subscribe(this.onChange)\n      );\n    }\n  }\n\n  public ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  onChange = (val: any) => {\n    this.value = val;\n  }\n\n  onTouch = () => {\n    this.onLocalTouch();\n  }\n\n  protected valueGetter() {\n    return this.valueControl.value;\n  }\n\n  protected valueSetter(val: any) {\n    this.onLocalChange(val);\n    this.onLocalTouch();\n    this.stateChanges.next();\n  }\n\n  protected valueTypeSetter(value: string) {\n    this.valType = value;\n  }\n\n  protected valueConverter(val: any): any {\n    return val;\n  }\n\n  public auxDateFormatter(date: Date): string {\n    return formatDate(\n      date,\n      'dd MMM yyyy',\n      'en_US'\n    );\n  }\n\n  public auxCurrencyFormatter(amount: number): string {\n    return formatCurrency(\n      amount,\n      'en_US',\n      '$',\n      '1.2-2'\n    );\n  }\n\n  getErrorMessage() {\n    const errors: { [key: string]: { invalid: object, message?: string | null }} | null = this.valueControl.errors;\n    const keys = Object.keys(errors) as Array<any>;\n    return !errors ? null :\n      this.valueControl.hasError('required') ? this.errorMessages.required :\n      this.valueControl.hasError('email') ? this.errorMessages.email :\n      this.valueControl.hasError('maxlength') ? this.errorMessages.maxlength :\n      this.valueControl.hasError('minlength') ? this.errorMessages.minlength :\n      this.valueControl.hasError('pattern') ? this.errorMessages.pattern :\n      errors[keys[0]].message;\n  }\n  // control value accessor interface implementation:\n\n  public writeValue(val: any | null): void {\n    this.valueControl.setValue(this.valueConverter(val)); // initial value or model updates for the view\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onLocalChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onLocalTouch = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.valueControl.disable();\n    } else {\n      this.valueControl.enable();\n    }\n  }\n\n  // end of control value accessor interface implementation\n}\n","import { Component, Input, Optional, Self } from '@angular/core';\nimport { BindableComponent, VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-input',\n  templateUrl: './bindable-input.component.html',\n  styleUrls: []\n})\nexport class BindableInputComponent extends BindableComponent {\n  inputType: string | null = 'text';\n  inputPrefix: string | null = '';\n  inputMask: string | null = '';\n  inputDropSpecialCharacters: boolean | null = true;\n  passwordField: boolean | null = false;\n  datepickerField: boolean | null = false;\n\n  @Input()\n    get password(): boolean {\n      return this.inputType === 'password' ? true : false;\n    }\n    set password(value: boolean) {\n      this.inputType = value ? 'password' : 'text';\n    }\n  @Input()\n  get mask(): string {\n    return this.inputMask;\n  }\n  set mask(value: string) {\n    this.inputMask = value || '';\n  }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  valueTypeSetter(value: VALUE_TYPE) {\n    // currency field\n    const currency: boolean = (value === VALUE_TYPE.CURRENCY);\n    this.inputPrefix = currency ? '$ ' : '';\n    this.inputMask = currency ? '0*.00' : '';\n    this.inputDropSpecialCharacters = !currency;\n\n    // password field\n    this.passwordField = (value === VALUE_TYPE.PASSWORD);\n    this.password = this.passwordField; // initial value\n\n    // datepicker field\n    this.datepickerField = (value === VALUE_TYPE.DATE);\n\n    super.valueTypeSetter(value);\n  }\n\n  valueGetter() {\n    const originalValue = super.valueGetter();\n\n    if (!originalValue) { return originalValue; } // return without modifications\n\n    switch (this.valueType) {\n      case VALUE_TYPE.DATE: {\n        return this.auxDateFormatter(originalValue);\n      }\n      case VALUE_TYPE.DURATION: {\n        const start = originalValue.start;\n        const end = originalValue.end;\n        return this.auxDateFormatter(start) + ' - ' + this.auxDateFormatter(end);\n      }\n      default: // no formatting required\n        return originalValue;\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\n\n@Component({\n  selector: 'rng-bindable-select',\n  templateUrl: './bindable-select.component.html',\n  styleUrls: []\n})\nexport class BindableSelectComponent extends BindableComponent {\n\n  @Input() returnKey: string; // default returns selected object\n  @Input() valueKey: string | null = 'value'; // default search items by \"value\" key if they are objects\n  @Input() items: any[] | null = [];\n  @Input() disableOptionCentering: boolean | null = true;\n  @Input() nameKey: string | null = 'name';\n  @Input() disabled = false;\n\n  multiple = false;\n\n  get valueName(): string {\n    const currentValue = this.value;\n    return this.valueNameGetter(currentValue);\n  }\n\n  protected valueNameGetter(currentValue): string {\n    return currentValue ? currentValue.name ? currentValue.name : currentValue as unknown as string : this.placeholder;\n  }\n\n  protected fieldCSSGetter() {\n    const baseCSS = super.fieldCSSGetter();\n    baseCSS.push('single-select');\n    return baseCSS;\n  }\n\n  protected valueGetter() {\n    const oldValue = super.valueGetter();\n    return this.currentValue(oldValue); // gets one of current items (if still present) by valueKey\n  }\n\n  protected currentValue(oldValue) {\n    if (!oldValue) { return oldValue; } // value not yet set. can be undefined or null.\n                                        // we can't change it if it is null or undefined so just return it \"as is\".\n\n    const value = oldValue[this.valueKey];\n\n    if (!value) { return oldValue; } // values are strings, no search required\n\n    return this.items.find(item => item[this.valueKey] === value);\n  }\n}\n","import { Component } from '@angular/core';\nimport { BindableSelectComponent } from '../bindable-select/bindable-select.component';\n\n@Component({\n  selector: 'rng-bindable-select-multi',\n  templateUrl: '../bindable-select/bindable-select.component.html',\n  styleUrls: []\n})\nexport class BindableSelectMultiComponent extends BindableSelectComponent {\n\n  multiple = true;\n\n  get selectionCount(): number {\n    const value = this.value;\n    return value ? value.length : 0;\n  }\n\n  get valueName(): string {\n    const cnt = this.selectionCount;\n    switch (cnt) {\n      case 0:\n        return this.placeholder;\n      case 1:\n        return super.valueNameGetter(this.value[0]);\n      default:\n        return this.placeholder + ' (' + cnt + ')';\n    }\n  }\n\n  protected fieldCSSGetter() {\n    const baseCSS = super.fieldCSSGetter();\n    baseCSS.push('multi-select');\n    return baseCSS;\n  }\n\n  protected currentValue(oldValue: any[]) {\n    if (!oldValue) { return oldValue; } // value not yet set. can be undefined or null.\n                                        // we can't change it if it is null or undefined so just return it \"as is\".\n\n    const values = oldValue.reduce((vals, oldval) => { // re-checking items\n      const oldKeyValue = oldval[this.valueKey];\n      if (!oldKeyValue) {\n        vals.push(oldval); // values are string, so just return a value\n      } else {\n        const objVal = this.items.find(item => item[this.valueKey] === oldKeyValue);\n        if (objVal) {\n          vals.push(objVal);\n        }\n      }\n      return vals;\n    }, []);\n\n    return values;\n  }\n}\n","import { Component, Optional, Self } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-checkbox',\n  templateUrl: './bindable-checkbox.component.html',\n  styleUrls: []\n})\nexport class BindableCheckboxComponent extends BindableComponent {\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BageTypeLabel } from '../../model/common-types';\n\n@Component({\n  selector: 'rng-type-label',\n  templateUrl: './type-label.component.html',\n  styleUrls: [],\n})\nexport class TypeLabelComponent implements OnInit {\n  typeClass: string[];\n  typeData: BageTypeLabel;\n\n  @Input()\n    set data(data: BageTypeLabel) {\n      this.typeData = data;\n      this.typeClass = ['rng-type-label', this.data.color, 'badge'];\n    }\n    get data() {\n      return this.typeData;\n    }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { Component, Input, Optional, Self, OnDestroy, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl, FormControl } from '@angular/forms';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'rng-reactive-control',\n  template: 'NO BASE TEMPLATE',\n  styleUrls: []\n})\nexport class ReactiveControlComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private subscription: Subscription;\n  public valueControl = new FormControl();\n  public stateChanges = new Subject<void>(); // this will mostly be used with custom controls for material inputs\n\n  @Input()\n    get disabled(): boolean { return this.valueControl.disabled; }\n    set disabled(value: boolean) {\n      const disabled: boolean = coerceBooleanProperty(value);\n      if (disabled) {\n        this.valueControl.disable();\n      } else {\n        this.valueControl.enable();\n      }\n      this.stateChanges.next();\n    }\n\n  @Input()\n    get value(): any | null {\n      return this.valueControl.value;\n    }\n    set value(val: any | null) {\n      this.onChange(val);\n      this.stateChanges.next();\n    }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n      this.valueControl = new FormControl();\n    }\n  }\n\n  public onLocalChange = (val: any) => {\n    console.log('onLocalChange', val);\n    this.value = val;\n  }\n\n  onChange = (val: any) => {\n    console.log('onChange', val);\n  }\n\n  onTouched = () => {\n    console.log('onTouched');\n  }\n\n  ngOnInit() {\n    console.log('ngOnInit');\n    // TODO: add common validators or some other logic to simplify or deserialise validators, etc.\n    if (this.ngControl && this.valueControl) {\n      console.log('ngOnInit: setting up');\n      // TODO: check for existing \"default\" validators\n      this.valueControl.setValidators(this.ngControl.validator);\n      this.valueControl.setAsyncValidators(this.ngControl.asyncValidator);\n      this.valueControl.setValue(this.ngControl.value);\n      this.valueControl.updateValueAndValidity();\n      this.subscription =\n        this.valueControl.valueChanges.subscribe(this.onLocalChange);\n    }\n  }\n\n  public ngOnDestroy() {\n    this.stateChanges.complete();\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  public writeValue(val: string | null): void {\n    this.value = val; // initial value or model updates for the view\n  }\n\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","\n// this is just a pilot, not tested, WIP\n\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Component, ElementRef, Input, OnDestroy, Optional, Self, HostBinding } from '@angular/core';\nimport { FormBuilder, FormGroup, ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { ReactiveControlComponent } from '../reactive-control/reactive-control.component';\n\n@Component({\n  selector: 'rng-reactive-mat-input-control',\n  templateUrl: 'reactive-mat-input-control.component.html',\n  styleUrls: ['reactive-mat-input-control.component.scss'],\n  providers: [\n    {\n      provide: MatFormFieldControl,\n      useExisting: ReactiveMatInputControlComponent\n    }\n  ],\n})\nexport class ReactiveMatInputControlComponent extends ReactiveControlComponent\n  implements ControlValueAccessor, MatFormFieldControl<string>, OnDestroy {\n\n  static nextId = 0;\n\n  get empty() {\n    const { value } = this.parts;\n    return !value || value.length === 0;\n  }\n\n  @HostBinding('class.floating')\n    get shouldLabelFloat() {\n      return this.focused || !this.empty;\n    }\n\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  @HostBinding('id') id = `rng-rmff-input-${ReactiveMatInputControlComponent.nextId++}`;\n\n  @Input()\n    get placeholder(): string { return this._placeholder; }\n    set placeholder(value: string) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n\n  @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n      this._required = coerceBooleanProperty(value);\n      this.stateChanges.next();\n    }\n\n  constructor(\n    formBuilder: FormBuilder,\n    // tslint:disable-next-line: variable-name\n    private _focusMonitor: FocusMonitor,\n    // tslint:disable-next-line: variable-name\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl) {\n      super(ngControl);\n\n      this.parts = formBuilder.group({\n        value: '',\n      });\n\n      _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n        if (this.focused && !origin) {\n          this.onTouched();\n        }\n        this.focused = !!origin;\n        this.stateChanges.next();\n      });\n    }\n\n  parts: FormGroup;\n  focused = false;\n  errorState = false;\n  controlType = 'rng-rmff-input';\n\n  // tslint:disable-next-line: variable-name\n  private _placeholder: string;\n  // tslint:disable-next-line: variable-name\n  private _required = false;\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\n      this._elementRef.nativeElement.querySelector('input').focus();\n    }\n  }\n\n  _handleInput(): void {\n    this.onChange(this.parts.value);\n  }\n}\n","import { Component, Optional, Self, Input } from '@angular/core';\nimport { ReactiveControlComponent } from '../reactive-control/reactive-control.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-reactive-mat-input',\n  templateUrl: './reactive-mat-input.component.html',\n  styleUrls: ['./reactive-mat-input.component.scss']\n})\nexport class ReactiveMatInputComponent extends ReactiveControlComponent {\n\n  @Input() label: string | null;\n  @Input() appearance: string | null;\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n}\n","import { Component, Optional, Self, Input } from '@angular/core';\nimport { BindableInputComponent } from '../bindable-input/bindable-input.component';\nimport { VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'rng-bindable-datepicker',\n  templateUrl: './bindable-datepicker.component.html',\n  styleUrls: []\n})\nexport class BindableDatepickerComponent\n  extends BindableInputComponent {\n\n  @Input() touchUi: boolean | null = false;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(map(result => result.matches));\n\n  constructor(\n    @Optional() @Self() public ngControl: NgControl,\n    private breakpointObserver: BreakpointObserver) {\n    super(ngControl);\n    this.valueType = VALUE_TYPE.DATE;\n  }\n\n  protected valueConverter(val: any): any {\n    return new Date(val) || val;\n  }\n}\n","import {\n  Component,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\n\n@Component({\n  selector: 'rng-simple-search',\n  templateUrl: './simple-search.component.html',\n  styleUrls: [],\n})\nexport class SimpleSearchComponent {\n  dataVal: string;\n  opened = false;\n  focused = false;\n\n  @Input() data: string | null = '';\n\n  @Input() closeButton: boolean | null = false;\n  @Input() placeholder = '';\n  @Output() searchChange: EventEmitter<any> = new EventEmitter();\n  @Output() searchClick: EventEmitter<any> = new EventEmitter();\n\n  openSearch = (e, el) => {\n    this.clickFunction();\n    this.opened = true;\n    this.focused = true;\n    el.focus();\n    return false;\n  }\n\n  changeFunction = (data: string) => {\n    this.dataVal = data;\n  }\n\n  backData = data => this.searchChange.emit(data);\n\n  onFocus() {\n    this.opened = true;\n    this.focused = true;\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onKeydownHandler(event: KeyboardEvent) {\n    if (event.key === 'Escape' || event.key === 'Enter') {\n      this.opened = false;\n      this.focused = false;\n      this.clickFunction();\n    }\n  }\n\n  cancelFunction() {\n    this.data = '';\n    this.opened = false;\n    this.focused = false;\n    this.backData(this.data);\n    this.clickFunction();\n  }\n\n  onBlur() {\n    if (this.data === '') {\n      this.opened = false;\n      this.focused = false;\n      this.clickFunction();\n    } else {\n      this.opened = true;\n    }\n  }\n\n  clickFunction = () => {\n    this.searchClick.emit();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FilterPresets } from '../../model/common-types';\n\n@Component({\n  selector: 'rng-content-toolbar',\n  templateUrl: './content-toolbar.component.html',\n  styleUrls: [],\n})\nexport class ContentToolbarComponent {\n  @Input() gridButton: boolean | null = false;\n  @Input() filterButton: boolean | null = false;\n  // new:\n  @Input() filters: FilterPresets[];\n  @Input() showFilters: boolean | null = false;\n  @Input() grid: boolean | null = true;\n  @Input() searchValue: string;\n\n  @Output() changeGrid = new EventEmitter();\n  @Output() searchData = new EventEmitter();\n  @Output() filterClick = new EventEmitter();\n  // new:\n  @Output() filterChanged = new EventEmitter();\n\n  // search function\n  onSearchChange(val) {\n    this.searchData.emit(val);\n  }\n  // end of search function\n\n  // filter\n  filterButtonClick() {\n    this.filterClick.emit();\n  }\n\n  changeFilter(state) {\n    this.filterChanged.emit(state);\n  }\n  // end of filter\n\n  // grid function\n  gridFunction() {\n    this.grid = !this.grid;\n    this.changeGrid.emit();\n  }\n  // end of grid function\n}\n","import { Component, EventEmitter, Output, Input, HostListener } from '@angular/core';\nimport { BindableComponent } from '../bindable/bindable.component';\nimport {  } from 'events';\n\n@Component({\n  selector: 'rng-bindable-textarea',\n  templateUrl: './bindable-textarea.component.html',\n  styleUrls: ['./bindable-textarea.component.scss']\n})\nexport class BindableTextareaComponent extends BindableComponent {\n  @Output() btnClick = new EventEmitter();\n  @Input() btnIconCSS: string | null;\n  @Input() autosize: boolean | null = true;\n  @Input() minRows: number | null = 1;\n  @Input() maxRows: number | null = 4;\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { BindableInputComponent } from '../bindable-input/bindable-input.component';\nimport * as momentModule from 'moment';\nconst moment = momentModule;\n\n@Component({\n  selector: 'rng-bindable-timepicker',\n  templateUrl: './bindable-timepicker.component.html',\n  styleUrls: []\n})\nexport class BindableTimepickerComponent\n  extends BindableInputComponent\n  implements OnInit {\n  @Input() stepMinutes: number | null = 30;\n  @Input() dayStartHour: number | null = 8;\n  @Input() dayEndHour: number | null = 19;\n\n  items: string[] = [];\n  filteredItems: string[] = this.items;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.items = this.generateIntervals();\n    this.filteredItems = this.items;\n    this.subscription.add(\n      this.valueControl.valueChanges.subscribe(value => {\n        this.filteredItems = this.items.filter(item => item.startsWith(value));\n      })\n    );\n  }\n\n  generateIntervals(): string[] {\n    const items = [];\n    for (let index = this.dayStartHour * 60; index <= this.dayEndHour * 60; index += this.stepMinutes) {\n      const date = new Date(0, 0, 0, 0, index);\n      items.push(moment(date).format('h:mm A'));\n    }\n    return items;\n  }\n\n}\n","import { Component, Input, Optional, Self } from '@angular/core';\nimport { BindableComponent, VALUE_TYPE } from '../bindable/bindable.component';\nimport { NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'rng-bindable-multi-input',\n  templateUrl: './bindable-multi-input.component.html',\n  styleUrls: []\n})\nexport class BindableMultiInputComponent extends BindableComponent {\n  inputType: string | null = 'text';\n  inputPrefix: string | null = '';\n  inputMask: string | null = '';\n  inputDropSpecialCharacters: boolean | null = true;\n  passwordField: boolean | null = false;\n  datepickerField: boolean | null = false;\n\n  @Input()\n    get password(): boolean {\n      return this.inputType === 'password' ? true : false;\n    }\n    set password(value: boolean) {\n      this.inputType = value ? 'password' : 'text';\n    }\n\n  constructor(@Optional() @Self() public ngControl: NgControl) {\n    super(ngControl);\n  }\n\n  valueTypeSetter(value: VALUE_TYPE) {\n    // currency field\n    const currency: boolean = (value === VALUE_TYPE.CURRENCY);\n    this.inputPrefix = currency ? '$ ' : '';\n    this.inputMask = currency ? '0*.00' : '';\n    this.inputDropSpecialCharacters = !currency;\n\n    // password field\n    this.passwordField = (value === VALUE_TYPE.PASSWORD);\n    this.password = this.passwordField; // initial value\n\n    // datepicker field\n    this.datepickerField = (value === VALUE_TYPE.DATE);\n\n    super.valueTypeSetter(value);\n  }\n\n  valueGetter() {\n    const originalValue = super.valueGetter();\n\n    if (!originalValue) { return originalValue; } // return without modifications\n\n    switch (this.valueType) {\n      case VALUE_TYPE.DATE: {\n        return this.auxDateFormatter(originalValue);\n      }\n      case VALUE_TYPE.DURATION: {\n        const start = originalValue.start;\n        const end = originalValue.end;\n        return this.auxDateFormatter(start) + ' - ' + this.auxDateFormatter(end);\n      }\n      default: // no formatting required\n        return originalValue;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaterialModule } from './material.module';\n\nimport { BindableComponent } from './bindable/bindable.component';\nimport { BindableInputComponent } from './bindable-input/bindable-input.component';\nimport { BindableSelectComponent } from './bindable-select/bindable-select.component';\nimport { BindableSelectMultiComponent } from './bindable-select-multi/bindable-select-multi.component';\nimport { BindableCheckboxComponent } from './bindable-checkbox/bindable-checkbox.component';\nimport { TypeLabelComponent } from './type-label/type-label.component';\nimport { ReactiveControlComponent } from './reactive-control/reactive-control.component';\nimport { ReactiveMatInputControlComponent } from './reactive-mat-input-control/reactive-mat-input-control.component';\nimport { ReactiveMatInputComponent } from './reactive-mat-input/reactive-mat-input.component';\nimport { BindableDatepickerComponent } from './bindable-datepicker/bindable-datepicker.component';\nimport { SimpleSearchComponent } from './simple-search/simple-search.component';\nimport { ContentToolbarComponent } from './content-toolbar/content-toolbar.component';\nimport { BindableTextareaComponent } from './bindable-textarea/bindable-textarea.component';\nimport { BindableTimepickerComponent } from './bindable-timepicker/bindable-timepicker.component';\nimport { BindableMultiInputComponent } from './bindable-multi-input/bindable-multi-input.component';\n\n@NgModule({\n  declarations: [\n    BindableComponent,\n    BindableInputComponent,\n    BindableSelectComponent,\n    BindableSelectMultiComponent,\n    BindableCheckboxComponent,\n    TypeLabelComponent,\n    ReactiveControlComponent,\n    ReactiveMatInputControlComponent,\n    ReactiveMatInputComponent,\n    BindableDatepickerComponent,\n    SimpleSearchComponent,\n    ContentToolbarComponent,\n    BindableTextareaComponent,\n    BindableTimepickerComponent,\n    BindableMultiInputComponent\n  ],\n  imports: [\n    CommonModule,\n    NgxMaskModule.forRoot(),\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    BindableComponent,\n    BindableInputComponent,\n    BindableSelectComponent,\n    BindableSelectMultiComponent,\n    BindableCheckboxComponent,\n    BindableDatepickerComponent,\n    ReactiveControlComponent,\n    ReactiveMatInputControlComponent,\n    ReactiveMatInputComponent,\n    SimpleSearchComponent,\n    ContentToolbarComponent,\n    BindableTextareaComponent,\n    BindableTimepickerComponent,\n    BindableMultiInputComponent\n  ]\n})\nexport class RngInputsModule { }\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;IAQA;KAU+B;;gBAV9B,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,iBAAiB;wBACjB,mBAAmB;wBACnB,qBAAqB;qBACtB;iBACF;;IAC6B,qBAAC;CAV/B;;;;;;ACRA;IAMM,kBAAkB,GAAG,MAAM;;;;AAWjC;;;;IAAA;KAKC;;;;;;IAJC,2CAAY;;;;;IAAZ,UAAa,OAA2B,EAAE,IAAwC;;YAC1E,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS;QAC1C,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;KAC5F;IACH,2BAAC;CAAA,IAAA;;IAyFC,2BAAuC,SAAoB;QAA3D,iBAIC;QAJsC,cAAS,GAAT,SAAS,CAAW;;QA3EjD,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;;QAIrC,iBAAY,GAAG,IAAI,WAAW,EAAE,CAAC;QACjC,iBAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;;QAEnC,YAAO,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAGnC,gBAAW,GAAkB,EAAE,CAAC;QAChC,kBAAa,GAAqC;YACzD,QAAQ,EAAE,mBAAmB;YAC7B,KAAK,EAAE,kBAAkB;YACzB,OAAO,EAAE,iBAAiB;YAC1B,SAAS,EAAE,mBAAmB;YAC9B,SAAS,EAAE,oBAAoB;SAChC,CAAC;QAkCO,kBAAa,GAAmB,KAAK,CAAC;QAgD/C,aAAQ;;;;QAAG,UAAC,GAAQ;YAClB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAClB,EAAA;QAED,YAAO;;;QAAG;YACR,KAAI,CAAC,YAAY,EAAE,CAAC;SACrB,EAAA;QA7BC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;SACrC;KACF;IA5DD,sBACM,yCAAU;;;;QADhB;YAEI,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,GAAG,kBAAkB,CAAC;SACzE;;;;;QACD,UAAe,KAAa;YAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;SAC9B;;;OAHA;IAKH,sBACM,wCAAS;;;;QADf;YAEI,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;;;;;QACD,UAAc,KAAa;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SAC7B;;;OAHA;IAKH,sBACM,oCAAK;;;;QADX;YAEI,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC3B;;;;;QACD,UAAU,KAAU;YAClB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACzB;;;OAHA;IAKH,sBACM,uCAAQ;;;;QADd;YAEI,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;;;;;QACD,UAAa,KAAc;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;SAC5E;;;OAHA;IAOH,sBAAI,yCAAU;;;;QAAd;YACE,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,OAAO,CAAC;SAC3D;;;OAAA;IAED,sBAAI,uCAAQ;;;;QAAZ;YACE,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;SAC9B;;;OAAA;;;;;IAES,0CAAc;;;;IAAxB;;YACQ,GAAG,GAAG,CAAC,YAAY,CAAC;QAE1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACtB;QAED,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC3B;QAED,OAAO,GAAG,CAAC;KACZ;;;;IAQD,oCAAQ;;;IAAR;;QAEE,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,EAAE;YACvC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;YAC3C,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACxD,CAAC;SACH;KACF;;;;IAEM,uCAAW;;;IAAlB;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;KAC9B;;;;;IAUS,uCAAW;;;;IAArB;QACE,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;KAChC;;;;;;IAES,uCAAW;;;;;IAArB,UAAsB,GAAQ;QAC5B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;KAC1B;;;;;;IAES,2CAAe;;;;;IAAzB,UAA0B,KAAa;QACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;;;;;;IAES,0CAAc;;;;;IAAxB,UAAyB,GAAQ;QAC/B,OAAO,GAAG,CAAC;KACZ;;;;;IAEM,4CAAgB;;;;IAAvB,UAAwB,IAAU;QAChC,OAAO,UAAU,CACf,IAAI,EACJ,aAAa,EACb,OAAO,CACR,CAAC;KACH;;;;;IAEM,gDAAoB;;;;IAA3B,UAA4B,MAAc;QACxC,OAAO,cAAc,CACnB,MAAM,EACN,OAAO,EACP,GAAG,EACH,OAAO,CACR,CAAC;KACH;;;;IAED,2CAAe;;;IAAf;;YACQ,MAAM,GAA0E,IAAI,CAAC,YAAY,CAAC,MAAM;;YACxG,IAAI,sBAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAc;QAC9C,OAAO,CAAC,MAAM,GAAG,IAAI;YACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ;gBACpE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK;oBAC9D,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS;wBACtE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS;4BACtE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO;gCAClE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;KAC3B;;;;;;;IAGM,sCAAU;;;;;;IAAjB,UAAkB,GAAe;QAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;KACtD;;;;;IAEM,4CAAgB;;;;IAAvB,UAAwB,EAAO;QAC7B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;KACzB;;;;;IAEM,6CAAiB;;;;IAAxB,UAAyB,EAAO;QAC9B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;KACxB;;;;;IAEM,4CAAgB;;;;IAAvB,UAAwB,UAAmB;QACzC,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;SAC5B;KACF;;gBAzLF,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,kBAAkB;iBAE7B;;;;gBA1BqB,SAAS,uBA6GhB,QAAQ,YAAI,IAAI;;;wBAlE5B,KAAK;8BACL,KAAK;gCACL,KAAK;6BAQL,KAAK;4BAQL,KAAK;wBAQL,KAAK;2BAQL,KAAK;gCAQL,KAAK;;IA6HR,wBAAC;CA5LD;;;;;;;ICf4CA,0CAAiB;IAuB3D,gCAAuC,SAAoB;QAA3D,YACE,kBAAM,SAAS,CAAC,SACjB;QAFsC,eAAS,GAAT,SAAS,CAAW;QAtB3D,eAAS,GAAkB,MAAM,CAAC;QAClC,iBAAW,GAAkB,EAAE,CAAC;QAChC,eAAS,GAAkB,EAAE,CAAC;QAC9B,gCAA0B,GAAmB,IAAI,CAAC;QAClD,mBAAa,GAAmB,KAAK,CAAC;QACtC,qBAAe,GAAmB,KAAK,CAAC;;KAmBvC;IAjBD,sBACM,4CAAQ;;;;QADd;YAEI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC;SACrD;;;;;QACD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,UAAU,GAAG,MAAM,CAAC;SAC9C;;;OAHA;IAIH,sBACI,wCAAI;;;;QADR;YAEE,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;;;;;QACD,UAAS,KAAa;YACpB,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,EAAE,CAAC;SAC9B;;;OAHA;;;;;IASD,gDAAe;;;;IAAf,UAAgB,KAAiB;;;YAEzB,QAAQ,IAAa,KAAK,+BAAyB;QACzD,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,0BAA0B,GAAG,CAAC,QAAQ,CAAC;;QAG5C,IAAI,CAAC,aAAa,IAAI,KAAK,+BAAyB,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;;QAGnC,IAAI,CAAC,eAAe,IAAI,KAAK,uBAAqB,CAAC;QAEnD,iBAAM,eAAe,YAAC,KAAK,CAAC,CAAC;KAC9B;;;;IAED,4CAAW;;;IAAX;;YACQ,aAAa,GAAG,iBAAM,WAAW,WAAE;QAEzC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,aAAa,CAAC;SAAE;QAE7C,QAAQ,IAAI,CAAC,SAAS;YACpB,wBAAsB;gBACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;aAC7C;YACD,gCAA0B;;oBAClB,KAAK,GAAG,aAAa,CAAC,KAAK;;oBAC3B,GAAG,GAAG,aAAa,CAAC,GAAG;gBAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aAC1E;YACD;gBACE,OAAO,aAAa,CAAC;SACxB;KACF;;gBAlEF,SAAS,SAAC;oBACT,QAAQ,EAAE,oBAAoB;oBAC9B,i0BAA8C;iBAE/C;;;;gBANQ,SAAS,uBA8BH,QAAQ,YAAI,IAAI;;;2BAf5B,KAAK;uBAOL,KAAK;;IA+CR,6BAAC;CAAA,CA9D2C,iBAAiB;;;;;;;ICDhBA,2CAAiB;IAL9D;QAAA,qEA8CC;;QAtCU,cAAQ,GAAkB,OAAO,CAAC;;QAClC,WAAK,GAAiB,EAAE,CAAC;QACzB,4BAAsB,GAAmB,IAAI,CAAC;QAC9C,aAAO,GAAkB,MAAM,CAAC;QAChC,cAAQ,GAAG,KAAK,CAAC;QAE1B,cAAQ,GAAG,KAAK,CAAC;;KAgClB;IA9BC,sBAAI,8CAAS;;;;QAAb;;gBACQ,YAAY,GAAG,IAAI,CAAC,KAAK;YAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;SAC3C;;;OAAA;;;;;;IAES,iDAAe;;;;;IAAzB,UAA0B,YAAY;QACpC,OAAO,YAAY,GAAG,YAAY,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,yCAAG,YAAY,IAAqB,GAAG,IAAI,CAAC,WAAW,CAAC;KACpH;;;;;IAES,gDAAc;;;;IAAxB;;YACQ,OAAO,GAAG,iBAAM,cAAc,WAAE;QACtC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9B,OAAO,OAAO,CAAC;KAChB;;;;;IAES,6CAAW;;;;IAArB;;YACQ,QAAQ,GAAG,iBAAM,WAAW,WAAE;QACpC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;KACpC;;;;;;IAES,8CAAY;;;;;IAAtB,UAAuB,QAAQ;QAA/B,iBASC;QARC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,QAAQ,CAAC;SAAE;;;;YAG7B,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QAErC,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,QAAQ,CAAC;SAAE;QAEhC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI;;;;QAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,GAAA,EAAC,CAAC;KAC/D;;gBA7CF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,y1BAA+C;iBAEhD;;;4BAGE,KAAK;2BACL,KAAK;wBACL,KAAK;yCACL,KAAK;0BACL,KAAK;2BACL,KAAK;;IAkCR,8BAAC;CAAA,CAzC4C,iBAAiB;;;;;;;ICAZA,gDAAuB;IALzE;QAAA,qEAmDC;QA5CC,cAAQ,GAAG,IAAI,CAAC;;KA4CjB;IA1CC,sBAAI,wDAAc;;;;QAAlB;;gBACQ,KAAK,GAAG,IAAI,CAAC,KAAK;YACxB,OAAO,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;SACjC;;;OAAA;IAED,sBAAI,mDAAS;;;;QAAb;;gBACQ,GAAG,GAAG,IAAI,CAAC,cAAc;YAC/B,QAAQ,GAAG;gBACT,KAAK,CAAC;oBACJ,OAAO,IAAI,CAAC,WAAW,CAAC;gBAC1B,KAAK,CAAC;oBACJ,OAAO,iBAAM,eAAe,YAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C;oBACE,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;aAC9C;SACF;;;OAAA;;;;;IAES,qDAAc;;;;IAAxB;;YACQ,OAAO,GAAG,iBAAM,cAAc,WAAE;QACtC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;KAChB;;;;;;IAES,mDAAY;;;;;IAAtB,UAAuB,QAAe;QAAtC,iBAkBC;QAjBC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,QAAQ,CAAC;SAAE;;;;YAG7B,MAAM,GAAG,QAAQ,CAAC,MAAM;;;;;QAAC,UAAC,IAAI,EAAE,MAAM;;;gBACpC,WAAW,GAAG,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC;YACzC,IAAI,CAAC,WAAW,EAAE;gBAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACnB;iBAAM;;oBACC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI;;;;gBAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,WAAW,GAAA,EAAC;gBAC3E,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnB;aACF;YACD,OAAO,IAAI,CAAC;SACb,GAAE,EAAE,CAAC;QAEN,OAAO,MAAM,CAAC;KACf;;gBAlDF,SAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;oBACrC,y1BAAgE;iBAEjE;;IA+CD,mCAAC;CAAA,CA9CiD,uBAAuB;;;;;;;ICC1BA,6CAAiB;IAE9D,mCAAuC,SAAoB;QAA3D,YACE,kBAAM,SAAS,CAAC,SACjB;QAFsC,eAAS,GAAT,SAAS,CAAW;;KAE1D;;gBATF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,mGAAiD;iBAElD;;;;gBANQ,SAAS,uBASH,QAAQ,YAAI,IAAI;;IAI/B,gCAAC;CAAA,CAN8C,iBAAiB;;;;;;ACThE;IAqBE;KAAgB;IAThB,sBACM,oCAAI;;;;QAIR;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;;;;;QAPH,UACW,IAAmB;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAC/D;;;OAAA;;;;IAOH,qCAAQ;;;IAAR,eAAa;;gBApBd,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;oBAC1B,iEAA0C;iBAE3C;;;;;uBAKE,KAAK;;IAYR,yBAAC;CArBD;;;;;;ACHA;IAoCE,kCAAuC,SAAoB;QAA3D,iBAKC;QALsC,cAAS,GAAT,SAAS,CAAW;QAxBpD,iBAAY,GAAG,IAAI,WAAW,EAAE,CAAC;QACjC,iBAAY,GAAG,IAAI,OAAO,EAAQ,CAAC;QA8BnC,kBAAa;;;;QAAG,UAAC,GAAQ;YAC9B,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;SAClB,EAAA;QAED,aAAQ;;;;QAAG,UAAC,GAAQ;YAClB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;SAC9B,EAAA;QAED,cAAS;;;QAAG;YACV,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SAC1B,EAAA;QAjBC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,IAAI,WAAW,EAAE,CAAC;SACvC;KACF;IA1BD,sBACM,8CAAQ;;;;;;QADd,cAC4B,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;;;;;QAC9D,UAAa,KAAc;;gBACnB,QAAQ,GAAY,qBAAqB,CAAC,KAAK,CAAC;YACtD,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aAC7B;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;;;OAT6D;IAWhE,sBACM,2CAAK;;;;QADX;YAEI,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;SAChC;;;;;QACD,UAAU,GAAe;YACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;;;OAJA;;;;IA0BH,2CAAQ;;;IAAR;QACE,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;;QAExB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,YAAY,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;;YAEpC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC1D,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACpE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC;YAC3C,IAAI,CAAC,YAAY;gBACf,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAChE;KACF;;;;IAEM,8CAAW;;;IAAlB;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;KACF;;;;;IAEM,6CAAU;;;;IAAjB,UAAkB,GAAkB;QAClC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;KAClB;;;;;IAEM,mDAAgB;;;;IAAvB,UAAwB,EAAO;QAC7B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;;IAEM,oDAAiB;;;;IAAxB,UAAyB,EAAO;QAC9B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;;;;IAEM,mDAAgB;;;;IAAvB,UAAwB,UAAmB;QACzC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;gBAvFF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,kBAAkB;iBAE7B;;;;gBAR8B,SAAS,uBAmCzB,QAAQ,YAAI,IAAI;;;2BArB5B,KAAK;wBAYL,KAAK;;IAkER,+BAAC;CAxFD;;;;;;;ICgBsDA,oDAAwB;IAiC5E,0CACE,WAAwB,EAEhB,aAA2B,EAE3B,WAAoC,EACjB,SAAoB;QANjD,YAOI,kBAAM,SAAS,CAAC,SAajB;QAjBO,mBAAa,GAAb,aAAa,CAAc;QAE3B,iBAAW,GAAX,WAAW,CAAyB;QACjB,eAAS,GAAT,SAAS,CAAW;QAxBX,iBAAW,GAAG,EAAE,CAAC;QAEpC,QAAE,GAAG,oBAAkB,gCAAgC,CAAC,MAAM,EAAI,CAAC;QAuCtF,aAAO,GAAG,KAAK,CAAC;QAChB,gBAAU,GAAG,KAAK,CAAC;QACnB,iBAAW,GAAG,gBAAgB,CAAC;;QAKvB,eAAS,GAAG,KAAK,CAAC;QArBtB,KAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAC7B,KAAK,EAAE,EAAE;SACV,CAAC,CAAC;QAEH,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,SAAS;;;;QAAC,UAAA,MAAM;YACvD,IAAI,KAAI,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;gBAC3B,KAAI,CAAC,SAAS,EAAE,CAAC;aAClB;YACD,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC;YACxB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B,EAAC,CAAC;;KACJ;IAhDH,sBAAI,mDAAK;;;;QAAT;YACU,IAAA,wBAAK;YACb,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;SACrC;;;OAAA;IAED,sBACM,8DAAgB;;;;QADtB;YAEI,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;SACpC;;;OAAA;IAMH,sBACM,yDAAW;;;;QADjB,cAC8B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;;;;;QACvD,UAAgB,KAAa;YAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;;;OAJsD;IAMzD,sBACM,sDAAQ;;;;QADd,cAC4B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;QAClD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;SAC1B;;;OAJiD;;;;IAsCpD,sDAAW;;;IAAX;QACE,iBAAM,WAAW,WAAE,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACrD;;;;;IAED,4DAAiB;;;;IAAjB,UAAkB,GAAa;QAC7B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClC;;;;;IAED,2DAAgB;;;;IAAhB,UAAiB,KAAiB;QAChC,IAAI,oBAAC,KAAK,CAAC,MAAM,IAAa,OAAO,CAAC,WAAW,EAAE,KAAK,OAAO,EAAE;YAC/D,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;SAC/D;KACF;;;;IAED,uDAAY;;;IAAZ;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACjC;IA/EM,uCAAM,GAAG,CAAC,CAAC;;gBAdnB,SAAS,SAAC;oBACT,QAAQ,EAAE,gCAAgC;oBAC1C,+IAAwD;oBAExD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,mBAAmB;4BAC5B,WAAW,EAAE,gCAAgC;yBAC9C;qBACF;;iBACF;;;;gBAdQ,WAAW;gBAHX,YAAY;gBAED,UAAU;gBACyB,SAAS,uBAsD3D,QAAQ,YAAI,IAAI;;;mCA7BlB,WAAW,SAAC,gBAAgB;8BAK5B,WAAW,SAAC,uBAAuB;qBAEnC,WAAW,SAAC,IAAI;8BAEhB,KAAK;2BAOL,KAAK;;IAyDR,uCAAC;CAAA,CAnFqD,wBAAwB;;;;;;;ICZ/BA,6CAAwB;IAKrE,mCAAuC,SAAoB;QAA3D,YACE,kBAAM,SAAS,CAAC,SACjB;QAFsC,eAAS,GAAT,SAAS,CAAW;;KAE1D;;gBAZF,SAAS,SAAC;oBACT,QAAQ,EAAE,wBAAwB;oBAClC,0LAAkD;;iBAEnD;;;;gBANQ,SAAS,uBAYH,QAAQ,YAAI,IAAI;;;wBAH5B,KAAK;6BACL,KAAK;;IAKR,gCAAC;CAAA,CAR8C,wBAAwB;;;;;;;ICK7DA,+CAAsB;IAQ9B,qCAC6B,SAAoB,EACvC,kBAAsC;QAFhD,YAGE,kBAAM,SAAS,CAAC,SAEjB;QAJ4B,eAAS,GAAT,SAAS,CAAW;QACvC,wBAAkB,GAAlB,kBAAkB,CAAoB;QARvC,aAAO,GAAmB,KAAK,CAAC;QAEzC,gBAAU,GAAwB,KAAI,CAAC,kBAAkB;aACtD,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC;aAC5B,IAAI,CAAC,GAAG;;;;QAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,OAAO,GAAA,EAAC,CAAC,CAAC;QAMrC,KAAI,CAAC,SAAS,qBAAmB;;KAClC;;;;;;IAES,oDAAc;;;;;IAAxB,UAAyB,GAAQ;QAC/B,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;KAC7B;;gBAvBF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,0sBAAmD;iBAEpD;;;;gBATQ,SAAS,uBAoBb,QAAQ,YAAI,IAAI;gBAlBC,kBAAkB;;;0BAWrC,KAAK;;IAgBR,kCAAC;CAAA,CAlBS,sBAAsB;;;;;;ACdhC;IAQA;QAAA,iBAkEC;QA3DC,WAAM,GAAG,KAAK,CAAC;QACf,YAAO,GAAG,KAAK,CAAC;QAEP,SAAI,GAAkB,EAAE,CAAC;QAEzB,gBAAW,GAAmB,KAAK,CAAC;QACpC,gBAAW,GAAG,EAAE,CAAC;QAChB,iBAAY,GAAsB,IAAI,YAAY,EAAE,CAAC;QACrD,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;QAE9D,eAAU;;;;;QAAG,UAAC,CAAC,EAAE,EAAE;YACjB,KAAI,CAAC,aAAa,EAAE,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;SACd,EAAA;QAED,mBAAc;;;;QAAG,UAAC,IAAY;YAC5B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB,EAAA;QAED,aAAQ;;;;QAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,EAAC;QAkChD,kBAAa;;;QAAG;YACd,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB,EAAA;KACF;;;;IAnCC,uCAAO;;;IAAP;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;;;;;IAGD,gDAAgB;;;;IADhB,UACiB,KAAoB;QACnC,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YACnD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;KACF;;;;IAED,8CAAc;;;IAAd;QACE,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;;;IAED,sCAAM;;;IAAN;QACE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;KACF;;gBA7DF,SAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,08BAA6C;iBAE9C;;;uBAME,KAAK;8BAEL,KAAK;8BACL,KAAK;+BACL,MAAM;8BACN,MAAM;mCAqBN,YAAY,SAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC;;IA8B9C,4BAAC;CAlED;;;;;;ACRA;IAGA;QAMW,eAAU,GAAmB,KAAK,CAAC;QACnC,iBAAY,GAAmB,KAAK,CAAC;QAGrC,gBAAW,GAAmB,KAAK,CAAC;QACpC,SAAI,GAAmB,IAAI,CAAC;QAG3B,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;;QAEjC,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;;KAwB9C;;;;;;;IArBC,gDAAc;;;;;;IAAd,UAAe,GAAG;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC3B;;;;;;;;IAID,mDAAiB;;;;;;IAAjB;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;KACzB;;;;;IAED,8CAAY;;;;IAAZ,UAAa,KAAK;QAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;;;;;;;;IAID,8CAAY;;;;;;IAAZ;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;;gBAxCF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,oqDAA+C;iBAEhD;;;6BAEE,KAAK;+BACL,KAAK;0BAEL,KAAK;8BACL,KAAK;uBACL,KAAK;8BACL,KAAK;6BAEL,MAAM;6BACN,MAAM;8BACN,MAAM;gCAEN,MAAM;;IAwBT,8BAAC;CA1CD;;;;;;;ICM+CA,6CAAiB;IALhE;QAAA,qEAWC;QALW,cAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAE/B,cAAQ,GAAmB,IAAI,CAAC;QAChC,aAAO,GAAkB,CAAC,CAAC;QAC3B,aAAO,GAAkB,CAAC,CAAC;;KACrC;;gBAXA,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,6yBAAiD;;iBAElD;;;2BAEE,MAAM;6BACN,KAAK;2BACL,KAAK;0BACL,KAAK;0BACL,KAAK;;IACR,gCAAC;CAAA,CAN8C,iBAAiB;;;;;;;ICN1D,MAAM,GAAG,YAAY;AAE3B;IAMUA,+CAAsB;IANhC;QAAA,qEAmCC;QA3BU,iBAAW,GAAkB,EAAE,CAAC;QAChC,kBAAY,GAAkB,CAAC,CAAC;QAChC,gBAAU,GAAkB,EAAE,CAAC;QAExC,WAAK,GAAa,EAAE,CAAC;QACrB,mBAAa,GAAa,KAAI,CAAC,KAAK,CAAC;;KAsBtC;;;;IApBC,8CAAQ;;;IAAR;QAAA,iBASC;QARC,iBAAM,QAAQ,WAAE,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS;;;;QAAC,UAAA,KAAK;YAC5C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM;;;;YAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;SACxE,EAAC,CACH,CAAC;KACH;;;;IAED,uDAAiB;;;IAAjB;;YACQ,KAAK,GAAG,EAAE;QAChB,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,EAAE,EAAE,KAAK,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;;gBAC3F,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;YACxC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3C;QACD,OAAO,KAAK,CAAC;KACd;;gBAjCF,SAAS,SAAC;oBACT,QAAQ,EAAE,yBAAyB;oBACnC,mnBAAmD;iBAEpD;;;8BAIE,KAAK;+BACL,KAAK;6BACL,KAAK;;IAyBR,kCAAC;CAAA,CA7BS,sBAAsB;;;;;;;ICFiBA,+CAAiB;IAgBhE,qCAAuC,SAAoB;QAA3D,YACE,kBAAM,SAAS,CAAC,SACjB;QAFsC,eAAS,GAAT,SAAS,CAAW;QAf3D,eAAS,GAAkB,MAAM,CAAC;QAClC,iBAAW,GAAkB,EAAE,CAAC;QAChC,eAAS,GAAkB,EAAE,CAAC;QAC9B,gCAA0B,GAAmB,IAAI,CAAC;QAClD,mBAAa,GAAmB,KAAK,CAAC;QACtC,qBAAe,GAAmB,KAAK,CAAC;;KAYvC;IAVD,sBACM,iDAAQ;;;;QADd;YAEI,OAAO,IAAI,CAAC,SAAS,KAAK,UAAU,GAAG,IAAI,GAAG,KAAK,CAAC;SACrD;;;;;QACD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,UAAU,GAAG,MAAM,CAAC;SAC9C;;;OAHA;;;;;IASH,qDAAe;;;;IAAf,UAAgB,KAAiB;;;YAEzB,QAAQ,IAAa,KAAK,+BAAyB;QACzD,IAAI,CAAC,WAAW,GAAG,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,OAAO,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,0BAA0B,GAAG,CAAC,QAAQ,CAAC;;QAG5C,IAAI,CAAC,aAAa,IAAI,KAAK,+BAAyB,CAAC;QACrD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;;QAGnC,IAAI,CAAC,eAAe,IAAI,KAAK,uBAAqB,CAAC;QAEnD,iBAAM,eAAe,YAAC,KAAK,CAAC,CAAC;KAC9B;;;;IAED,iDAAW;;;IAAX;;YACQ,aAAa,GAAG,iBAAM,WAAW,WAAE;QAEzC,IAAI,CAAC,aAAa,EAAE;YAAE,OAAO,aAAa,CAAC;SAAE;QAE7C,QAAQ,IAAI,CAAC,SAAS;YACpB,wBAAsB;gBACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;aAC7C;YACD,gCAA0B;;oBAClB,KAAK,GAAG,aAAa,CAAC,KAAK;;oBAC3B,GAAG,GAAG,aAAa,CAAC,GAAG;gBAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;aAC1E;YACD;gBACE,OAAO,aAAa,CAAC;SACxB;KACF;;gBA3DF,SAAS,SAAC;oBACT,QAAQ,EAAE,0BAA0B;oBACpC,i0BAAoD;iBAErD;;;;gBANQ,SAAS,uBAuBH,QAAQ,YAAI,IAAI;;;2BAR5B,KAAK;;IA+CR,kCAAC;CAAA,CAvDgD,iBAAiB;;;;;;ACTlE;IAsBA;KA0CgC;;gBA1C/B,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,iBAAiB;wBACjB,sBAAsB;wBACtB,uBAAuB;wBACvB,4BAA4B;wBAC5B,yBAAyB;wBACzB,kBAAkB;wBAClB,wBAAwB;wBACxB,gCAAgC;wBAChC,yBAAyB;wBACzB,2BAA2B;wBAC3B,qBAAqB;wBACrB,uBAAuB;wBACvB,yBAAyB;wBACzB,2BAA2B;wBAC3B,2BAA2B;qBAC5B;oBACD,OAAO,EAAE;wBACP,YAAY;wBACZ,aAAa,CAAC,OAAO,EAAE;wBACvB,cAAc;wBACd,WAAW;wBACX,mBAAmB;qBACpB;oBACD,OAAO,EAAE;wBACP,iBAAiB;wBACjB,sBAAsB;wBACtB,uBAAuB;wBACvB,4BAA4B;wBAC5B,yBAAyB;wBACzB,2BAA2B;wBAC3B,wBAAwB;wBACxB,gCAAgC;wBAChC,yBAAyB;wBACzB,qBAAqB;wBACrB,uBAAuB;wBACvB,yBAAyB;wBACzB,2BAA2B;wBAC3B,2BAA2B;qBAC5B;iBACF;;IAC8B,sBAAC;CA1ChC;;;;"}